pipeline{
    agent any
    environment {
        // env_name = env_value 
        FOLDER_NAME= 'api'
        CONTAINER_NAME = 'api-app'
        EXTERNAL_APP_PORT = '5000'
        INTERNAL_APP_PORT = '5000'
        CODE_DIR='movie-land'
        IMAGE_NAME='${FOLDER_NAME}:v1.${BUILD_NUMBER}'
        DOCKER_CREDENTIALS_ID = 'dockerhubid'
        DOCKERHUB_REPO = 'yit1977ltld/apiproject'        
    }    
    stages{
        stage("build image"){
            steps{
                sh 'pwd'
                sh 'ls -la'
                dir("${FOLDER_NAME}") {
                    sh "docker build -t ${IMAGE_NAME} ."        
                    sh "docker rm -f ${CONTAINER_NAME}"                
                    //sh "docker run -d --name ${CONTAINER_NAME} -p ${EXTERNAL_APP_PORT}:${INTERNAL_APP_PORT} ${IMAGE_NAME}"                    
                }
            }
            post{
                always{
                    // Delete docker file
                    sh "rm -f Dockerfile "
                }
                success{
                    echo "Api App Build Success"
                }
                failure{
                    echo "oooApi App Build Failure"
                }
            }
        }
        stage("Test Image"){
            steps{
                    sh "docker run -d --name ${CONTAINER_NAME} -p ${EXTERNAL_APP_PORT}:${INTERNAL_APP_PORT} ${IMAGE_NAME}"   
                    sh "sleep 5 && timeout 5 ping localhost -c 4 -p ${EXTERNAL_APP_PORT}"                 
                }
            post{
                success{
                    echo "API Container is answering - OK"
                }
                failure{
                    echo "API Container is not answering - Failure"
                }
            }                
        }

        stage("Push Image"){
            steps{
                script {
                    // Log in to Docker Hub
                    withCredentials([usernamePassword(credentialsId: "${DOCKER_CREDENTIALS_ID}", passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    }
                    // Push the Docker image
                    sh "docker push ${DOCKERHUB_REPO}:${IMAGE_NAME}"

                    // Also save to a file
                    sh "docker save ${DOCKERHUB_REPO}:${IMAGE_NAME} > ${FOLDER_NAME}.tar"
                }
                }
            post{
                success{
                    echo "Image Exported"
                }
                failure{
                    echo "Fail to export Image"
                }
            }                
        }        
    }
    post{
        always{
            sh 'echo hello'
        }
        success{
            echo "========pipeline executed successfully ========"
        }
        failure{
            echo "========pipeline execution failed========"
        }
    }
}